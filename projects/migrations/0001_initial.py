# Generated by Django 5.2.5 on 2025-09-19 19:45

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(help_text='Code unique du produit', max_length=50, unique=True, verbose_name='Code produit')),
                ('name', models.CharField(help_text='Nom commercial du produit', max_length=200, verbose_name='Nom du produit')),
                ('description', models.TextField(blank=True, help_text='Description détaillée du produit', verbose_name='Description')),
                ('type_produit', models.CharField(choices=[('peinture', 'Peinture'), ('sous_couche', 'Sous-couche'), ('main_oeuvre', "Main d'œuvre"), ('materiel', 'Matériel'), ('equipement', 'Équipement'), ('service', 'Service'), ('autre', 'Autre')], db_index=True, max_length=20, verbose_name='Type de produit')),
                ('unit', models.CharField(choices=[('m2', 'M²'), ('ml', 'ML'), ('unite', 'U'), ('piece', 'Pièce'), ('heure', 'Heure'), ('jour', 'Jour'), ('litre', 'Litre'), ('kg', 'Kg'), ('forfait', 'F')], default='m2', help_text='Unité de mesure pour ce produit', max_length=20, verbose_name='Unité')),
                ('price_unit', models.DecimalField(decimal_places=2, help_text='Prix par unité', max_digits=10, verbose_name='Prix unitaire (€)')),
                ('is_active', models.BooleanField(default=True, help_text='Produit disponible pour les devis', verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['type_produit', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(max_length=50, unique=True, verbose_name='Référence')),
                ('title', models.CharField(blank=True, help_text='Titre descriptif du devis', max_length=200, verbose_name='Titre du devis')),
                ('description', models.TextField(blank=True, help_text='Description des travaux proposés', verbose_name='Description détaillée du devis')),
                ('date_response', models.DateTimeField(blank=True, null=True, verbose_name='Date de réponse')),
                ('status', models.CharField(choices=[('brouillon', 'Brouillon'), ('envoye', 'Envoyé'), ('vu', 'Vu par le client'), ('accepte', 'Accepté'), ('refuse', 'Refusé'), ('expire', 'Expiré'), ('annule', 'Annulé')], db_index=True, default='brouillon', max_length=20, verbose_name='Statut')),
                ('company_name', models.CharField(default='Ma Société', max_length=100, verbose_name="Nom de l'entreprise")),
                ('company_address', models.CharField(default="123 Rue de l'Entreprise", max_length=255, verbose_name="Adresse de l'entreprise")),
                ('company_siret', models.CharField(default='12345678901234', max_length=14, verbose_name='Numéro SIRET')),
                ('company_postal_code', models.CharField(default='75001', max_length=10, verbose_name="Code postal de l'entreprise")),
                ('company_city', models.CharField(default='Paris', max_length=100, verbose_name="Ville de l'entreprise")),
                ('company_phone', models.CharField(default='01 23 45 67 89', max_length=20, verbose_name='Numéro de téléphone')),
                ('company_email', models.EmailField(default='contact@entreprise.com', max_length=254, verbose_name="Email de l'entreprise")),
                ('company_website', models.URLField(blank=True, default='https://www.entreprise.com', verbose_name="Site web de l'entreprise")),
                ('company_logo', models.ImageField(blank=True, upload_to='logos/', verbose_name="Logo de l'entreprise")),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Sous-total')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('20.00'), max_digits=5, verbose_name='Taux TVA')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Montant TVA')),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Total TTC')),
                ('terms_conditions', models.TextField(blank=True, help_text='Conditions générales de vente et modalités', verbose_name='Conditions générales')),
                ('notes', models.TextField(blank=True, help_text='Notes additionnelles', verbose_name='Notes')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('date_sent', models.DateTimeField(blank=True, null=True, verbose_name="Date d'envoi")),
                ('date_viewed', models.DateTimeField(blank=True, null=True, verbose_name='Date de consultation')),
                ('date_accepted', models.DateTimeField(blank=True, null=True, verbose_name="Date d'acceptation")),
                ('date_refused', models.DateTimeField(blank=True, null=True, verbose_name='Date de refus')),
                ('date_expiry', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_devis', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Devis',
                'verbose_name_plural': 'Devis',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='DevisHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('created', 'Créé'), ('sent', 'Envoyé'), ('viewed', 'Consulté'), ('accepted', 'Accepté'), ('refused', 'Refusé'), ('modified', 'Modifié'), ('cancelled', 'Annulé')], max_length=20, verbose_name='Action')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date/Heure')),
                ('notes', models.TextField(blank=True, help_text='Notes sur cette action', verbose_name='Notes')),
                ('devis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='projects.devis', verbose_name='Devis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Historique devis',
                'verbose_name_plural': 'Historiques devis',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DevisLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantité de ce produit', max_digits=10, verbose_name='Quantité')),
                ('price_unit', models.DecimalField(decimal_places=2, help_text='Prix unitaire au moment du devis', max_digits=10, verbose_name='Prix unitaire (€)')),
                ('total_line', models.DecimalField(decimal_places=2, help_text='Montant total de cette ligne', max_digits=10, verbose_name='Total ligne (€)')),
                ('description', models.TextField(blank=True, help_text='Description spécifique pour cette ligne', verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans le devis", verbose_name='Ordre')),
                ('devis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='projects.devis', verbose_name='Devis')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.product', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Ligne de devis',
                'verbose_name_plural': 'Lignes de devis',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, help_text='Titre descriptif du projet', max_length=200, verbose_name='Titre du projet')),
                ('reference', models.CharField(blank=True, help_text='Référence unique générée automatiquement', max_length=20, unique=True, verbose_name='Référence')),
                ('project_type', models.CharField(choices=[('peinture_interieure', 'Peinture Intérieure'), ('peinture_exterieure', 'Peinture Extérieure'), ('decoration', 'Décoration'), ('renovation', 'Rénovation'), ('revetement_mural', 'Revêtement Mural'), ('commercial', 'Peinture Commerciale'), ('residentiel', 'Résidentiel'), ('autre', 'Autre')], db_index=True, default='peinture_interieure', max_length=50, verbose_name='Type de projet')),
                ('description', models.TextField(help_text='Description complète du projet et des attentes', verbose_name='Description détaillée')),
                ('surface_totale', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Surface totale à traiter', max_digits=8, verbose_name='Surface totale (m²)')),
                ('nombre_pieces', models.IntegerField(default=1, help_text='Nombre total de pièces concernées', verbose_name='Nombre de pièces')),
                ('types_pieces', models.CharField(blank=True, help_text='Liste des types de pièces concernées', max_length=200, verbose_name='Types de pièces')),
                ('etat_support', models.CharField(choices=[('excellent', 'Excellent'), ('bon', 'Bon'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais'), ('abime', 'Abîmé')], default='bon', help_text='État actuel des surfaces à traiter', max_length=20, verbose_name='État du support')),
                ('type_finition', models.CharField(choices=[('mat', 'Mat'), ('satin', 'Satin'), ('semi_brillant', 'Semi-brillant'), ('brillant', 'Brillant'), ('texture', 'Texturé')], default='mat', help_text='Type de finition souhaitée', max_length=20, verbose_name='Type de finition')),
                ('couleurs_souhaitees', models.JSONField(blank=True, default=dict, help_text='Couleurs par zone (murs, plafond, etc.)', verbose_name='Couleurs souhaitées')),
                ('materiaux_specifiques', models.TextField(blank=True, help_text='Matériaux ou marques spécifiques demandés', verbose_name='Matériaux spécifiques')),
                ('contraintes_horaires', models.TextField(blank=True, help_text="Contraintes d'horaires ou de planning", verbose_name='Contraintes horaires')),
                ('date_debut_souhaitee', models.DateField(blank=True, help_text='Date souhaitée pour commencer les travaux', null=True, verbose_name='Date de début souhaitée')),
                ('date_fin_souhaitee', models.DateField(blank=True, help_text='Date souhaitée pour terminer les travaux', null=True, verbose_name='Date de fin souhaitée')),
                ('date_debut_prevue', models.DateField(blank=True, null=True, verbose_name='Date de début prévue')),
                ('date_fin_prevue', models.DateField(blank=True, null=True, verbose_name='Date de fin prévue')),
                ('adresse_travaux', models.CharField(default='', help_text='Adresse complète où les travaux seront réalisés', max_length=255, verbose_name='Adresse des travaux')),
                ('complement_adresse', models.CharField(blank=True, help_text='Appartement, étage, bâtiment, etc.', max_length=255, verbose_name="Complément d'adresse")),
                ('code_postal', models.CharField(db_index=True, max_length=10, verbose_name='Code postal')),
                ('ville', models.CharField(db_index=True, max_length=100, verbose_name='Ville')),
                ('pays', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('contact_nom', models.CharField(blank=True, help_text='Personne à contacter sur le lieu des travaux', max_length=200, verbose_name='Nom du contact sur site')),
                ('contact_telephone', models.CharField(blank=True, help_text='Numéro de téléphone du contact sur site', max_length=20, verbose_name='Téléphone du contact')),
                ('budget_minimum', models.DecimalField(blank=True, decimal_places=2, help_text='Budget minimum envisagé', max_digits=10, null=True, verbose_name='Budget minimum (€)')),
                ('budget_maximum', models.DecimalField(blank=True, decimal_places=2, help_text='Budget maximum envisagé', max_digits=10, null=True, verbose_name='Budget maximum (€)')),
                ('status', models.CharField(choices=[('brouillon', 'Brouillon'), ('soumis', 'Soumis'), ('en_examen', 'En examen'), ('devis_demande', 'Devis demandé'), ('devis_envoye', 'Devis envoyé'), ('devis_accepte', 'Devis accepté'), ('devis_refuse', 'Devis refusé'), ('planifie', 'Planifié'), ('en_cours', 'En cours'), ('termine', 'Terminé'), ('annule', 'Annulé'), ('en_attente', 'En attente')], db_index=True, default='en_attente', max_length=20, verbose_name='Statut')),
                ('priority', models.CharField(choices=[('faible', 'Faible'), ('normale', 'Normale'), ('elevee', 'Élevée'), ('urgente', 'Urgente')], db_index=True, default='normale', max_length=20, verbose_name='Priorité')),
                ('notes_client', models.TextField(blank=True, help_text='Remarques et demandes spécifiques du client', verbose_name='Notes du client')),
                ('notes_internes', models.TextField(blank=True, help_text="Notes internes pour l'équipe", verbose_name='Notes internes')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminé le')),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_projects', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projets', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='devis',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devis', to='projects.project', verbose_name='Projet'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['created_by', 'status'], name='projects_pr_created_093325_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type', 'status'], name='projects_pr_project_9d76d4_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['created_at'], name='projects_pr_created_6b02e3_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['priority', 'status'], name='projects_pr_priorit_17637b_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['reference'], name='projects_pr_referen_43c609_idx'),
        ),
    ]
