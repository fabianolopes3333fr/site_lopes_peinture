# Generated by Django 5.2.5 on 2025-08-30 19:16

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('account_type', models.CharField(choices=[('CLIENT', 'Client'), ('COLLABORATOR', 'Collaborateur'), ('ADMINISTRATOR', 'Administrateur')], default='CLIENT', help_text="Définit le niveau d'accès de l'utilisateur", max_length=20, verbose_name='type de compte')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('PARTICULAR', 'Particulier'), ('PROFESSIONAL', 'Professionnel')], default='PARTICULAR', max_length=20, verbose_name="type d'utilisateur")),
                ('civility', models.CharField(choices=[('M', 'M'), ('MME', 'Mme'), ('OTHER', 'Autre')], default='M', max_length=5, verbose_name='civilité')),
                ('company_name', models.CharField(blank=True, max_length=255, verbose_name='raison sociale')),
                ('trading_name', models.CharField(blank=True, max_length=255, verbose_name='nom commercial')),
                ('siren', models.CharField(blank=True, help_text='9 caractères numériques', max_length=9, verbose_name='SIREN')),
                ('vat_number', models.CharField(blank=True, help_text='Format: FR + 11 caractères', max_length=14, verbose_name='TVA Intracommunautaire')),
                ('legal_form', models.CharField(blank=True, max_length=100, verbose_name='forme juridique')),
                ('activity_type', models.CharField(blank=True, max_length=100, verbose_name="type d'activité")),
                ('ape_code', models.CharField(blank=True, help_text='Code NAF/APE (5 caractères)', max_length=5, verbose_name='code APE')),
                ('billing_address', models.TextField(blank=True, verbose_name='adresse de facturation')),
                ('address_complement', models.CharField(blank=True, max_length=255, verbose_name="complément d'adresse")),
                ('country', models.CharField(default='France', max_length=100, verbose_name='pays')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('verification_token', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('password_changed_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_projet', models.CharField(choices=[('peinture_interieure', 'Peinture Intérieure'), ('peinture_exterieure', 'Peinture Extérieure'), ('decoration', 'Décoration'), ('renovation', 'Rénovation'), ('revetement_mural', 'Revêtement Mural'), ('commercial', 'Peinture Commerciale'), ('autre', 'Autre')], max_length=50, verbose_name='Type de projet')),
                ('description', models.TextField(help_text='Décrivez votre projet en détail', verbose_name='Description')),
                ('surface', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Surface (m²)')),
                ('date_debut_souhaitee', models.DateField(blank=True, null=True, verbose_name='Date de début souhaitée')),
                ('date_fin_souhaitee', models.DateField(blank=True, null=True, verbose_name='Date de fin souhaitée')),
                ('urgence', models.CharField(choices=[('faible', 'Faible'), ('normale', 'Normale'), ('elevee', 'Élevée'), ('urgente', 'Urgente')], default='normale', max_length=20, verbose_name='Urgence')),
                ('adresse_travaux', models.CharField(max_length=255, verbose_name='Adresse des travaux')),
                ('complement_adresse', models.CharField(blank=True, max_length=255, verbose_name="Complément d'adresse")),
                ('code_postal', models.CharField(max_length=10, verbose_name='Code postal')),
                ('ville', models.CharField(max_length=100, verbose_name='Ville')),
                ('pays', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('budget_estime', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Budget estimé (€)')),
                ('status', models.CharField(choices=[('en_reflexion', 'En réflexion'), ('devis_demande', 'Devis demandé'), ('devis_recu', 'Devis reçu'), ('accepte', 'Accepté'), ('en_cours', 'En cours'), ('termine', 'Terminé'), ('annule', 'Annulé')], default='en_reflexion', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'projet',
                'verbose_name_plural': 'projets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('user_type', 'PARTICULAR'), models.Q(('user_type', 'PROFESSIONAL'), models.Q(('company_name', ''), _negated=True), models.Q(('siren', ''), _negated=True)), _connector='OR'), name='professional_fields_required'),
        ),
    ]
